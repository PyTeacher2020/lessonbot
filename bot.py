import telebot
import bdmodul
import Buttons

#main variables

TOKEN = "1298948503:AAGO1d4eqOmI8Tvo-VXDkspnpYVCjH792n8"
bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def start_handler(message):
    bot.send_message(message.chat.id, bdmodul.vk())

@bot.message_handler(commands=['help'])
def process_help_command(message):
    bot.send_message(message.chat.id, '–Ø –∑–Ω–∞—é —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n /Show \n /Edit \n /Add \n /Delete \n')
    
@bot.message_handler(commands=['Show'])
def process_show_command(message):
    with open('books.csv') as database:
        for i in database:
            bot.send_message(message.chat.id,i)

@bot.message_handler(commands=['button'])
def activate_butt(message):
    bot.send_message(message.chat.id, '–¢—ã–∫–Ω–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É'+str(message.chat.id),reply_markup=Buttons.start_menu())

@bot.message_handler(content_types= 'text' )
def process_step(message):
    # if message.text=='üîç–ù–∞–π—Ç–∏ –≤–∞–∫–∞–Ω—Å–∏—é':
    #     msg = bot.reply_to(message, '–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–∏:')
    #     bot.register_next_step_handler(msg, statistics)
    # if message.text=='üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
    #     print('—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
    if message.text=='‚öô–ù–∞—Å—Ç—Ä–æ–π–∫–∏':
        msg = bot.reply_to(message, '–°–æ–≤–µ—Ç—É–µ–º –æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ "–ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –≤—ã –Ω–µ –ø–æ–Ω–∏–º–∞–µ—Ç–µ, –∫–∞–∫–æ–π –ø–∞—Ä–∞–º–µ—Ç—Ä –æ–Ω–∏ —Ä–µ–≥—É–ª–∏—Ä—É—é—Çüòä',reply_markup=Buttons.settings())
        bot.register_next_step_handler(msg, settings)



@bot.message_handler(content_types= 'text' )
def settings(message):
    if message.text == 'üí≤–†–∞—Å—á–µ—Ç –∑–∞—Ä–ø–ª–∞—Ç—ã':
         msg=bot.reply_to(message,'–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—ç—Ñ. —Ä–∞—Å—á–µ—Ç–∞ –ó–ü. –û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞',reply_markup=Buttons.salary_set('–°—Ä–µ–¥–Ω—è—è –ó–ü –ø–æ MIN','set1'))
         bot.register_next_step_handler(msg, settings)
    if message.text == '‚¨Ö':
        msg=bot.reply_to(message,'–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å',reply_markup=Buttons.start_menu())
        bot.register_next_step_handler(msg, process_step)

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    global salary_calc
    if call.message:
        if call.data == "set1":
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—ç—Ñ. —Ä–∞—Å—á–µ—Ç–∞ –ó–ü. –û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞",reply_markup=Buttons.salary_set('–°—Ä–µ–¥–Ω—è—è –ó–ü: –ø–æ MAX','set2'))
            salary_calc='max'

        if call.data == "set2":
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—ç—Ñ. —Ä–∞—Å—á–µ—Ç–∞ –ó–ü. –û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞",
                                  reply_markup=Buttons.salary_set('–°—Ä–µ–¥–Ω—è—è –ó–ü: –ø–æ MIN','set1'))
            salary_calc = 'min'
    print(salary_calc)

bot.polling()
